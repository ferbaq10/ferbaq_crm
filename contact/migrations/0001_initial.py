# Generated by Django 5.2.2 on 2025-07-28 21:39

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0001_initial'),
        ('client', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(error_messages={'max_length': 'El nombre no puede exceder 100 caracteres.', 'unique': 'Este nombre de contacto ya existe.'}, max_length=100, unique=True, verbose_name='Nombre')),
                ('address', models.CharField(blank=True, error_messages={'max_length': 'La dirección no puede exceder 255 caracteres.'}, max_length=255, null=True, verbose_name='Dirección')),
                ('email', models.CharField(max_length=100, unique=True, validators=[django.core.validators.EmailValidator(message='Debe ser un correo electrónico válido')], verbose_name='Correo electrónico')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='El número debe contener al menos 10 dígitos numéricos.', regex='^\\d{10,}$')], verbose_name='Teléfono')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='catalog.city', verbose_name='Ciudad')),
                ('clients', models.ManyToManyField(related_name='contacts', to='client.client', verbose_name='Clientes')),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='catalog.job', verbose_name='Cargo')),
            ],
            options={
                'verbose_name': 'Contacto',
                'verbose_name_plural': 'Contactos',
                'db_table': 'contact_contacts',
            },
        ),
        migrations.CreateModel(
            name='HistoricalContact',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(db_index=True, error_messages={'max_length': 'El nombre no puede exceder 100 caracteres.', 'unique': 'Este nombre de contacto ya existe.'}, max_length=100, verbose_name='Nombre')),
                ('address', models.CharField(blank=True, error_messages={'max_length': 'La dirección no puede exceder 255 caracteres.'}, max_length=255, null=True, verbose_name='Dirección')),
                ('email', models.CharField(db_index=True, max_length=100, validators=[django.core.validators.EmailValidator(message='Debe ser un correo electrónico válido')], verbose_name='Correo electrónico')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='El número debe contener al menos 10 dígitos numéricos.', regex='^\\d{10,}$')], verbose_name='Teléfono')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('city', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='catalog.city', verbose_name='Ciudad')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='catalog.job', verbose_name='Cargo')),
            ],
            options={
                'verbose_name': 'historical Contacto',
                'verbose_name_plural': 'historical Contactos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
